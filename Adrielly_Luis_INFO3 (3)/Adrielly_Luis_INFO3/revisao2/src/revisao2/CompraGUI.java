package revisao2;

import java.util.Vector;
import javax.swing.JOptionPane;
public class CompraGUI extends javax.swing.JPanel {

    //armazena temporariamente produto slecionado
    private Produto produtoSelecionado;
    private ModeloTabelaCompra carrinhoComprasTab;
    private double precoCompra;
    
    public CompraGUI() {
        initComponents();
        precoCompra = 0.0;
        meuInitComponents();
    }
    
    private void meuInitComponents(){
        this.carrinhoComprasTab = new ModeloTabelaCompra(this);
        
        //cria conexão entre tabela usuário
       tabelaCarrinho.setModel(carrinhoComprasTab);        
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        codTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nomeTxt = new javax.swing.JTextField();
        quantidadeTxt = new javax.swing.JTextField();
        precoUnitTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCarrinho = new javax.swing.JTable();
        removerBtn = new javax.swing.JButton();
        finalizarBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        addProdutoBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        totalTxt = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Código");

        codTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codTxtActionPerformed(evt);
            }
        });
        codTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codTxtKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Nome");

        nomeTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeTxt.setEnabled(false);

        quantidadeTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantidadeTxt.setText("1");
        quantidadeTxt.setEnabled(false);
        quantidadeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeTxtActionPerformed(evt);
            }
        });
        quantidadeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantidadeTxtKeyReleased(evt);
            }
        });

        precoUnitTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precoUnitTxt.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Quantidade");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("preço Unt.");

        tabelaCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaCarrinho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaCarrinhoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaCarrinho);

        removerBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        removerBtn.setText("Remover");
        removerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBtnActionPerformed(evt);
            }
        });

        finalizarBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        finalizarBtn.setText("Finalizar");
        finalizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarBtnActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Estoque");

        addProdutoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addProdutoBtn.setText("add produto");
        addProdutoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdutoBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Valor total: R$: ");

        totalTxt.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        totalTxt.setText("0,00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(93, 93, 93))
                    .addComponent(codTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(nomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3)
                        .addGap(96, 96, 96)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(quantidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112)
                        .addComponent(precoUnitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(197, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(finalizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(removerBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(addProdutoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalTxt)
                        .addGap(0, 37, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(codTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precoUnitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(removerBtn)
                        .addGap(18, 18, 18)
                        .addComponent(addProdutoBtn)
                        .addGap(102, 102, 102)
                        .addComponent(finalizarBtn)
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(totalTxt))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void codTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codTxtActionPerformed

    private void quantidadeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantidadeTxtActionPerformed

    private void codTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codTxtKeyTyped
        //Apenas rodará se a tecla pressionada for enter
        if (evt.getKeyChar() == '\n') {

            //avaliando se existe informação no campo do código
            if (!codTxt.getText().isEmpty()) {
                try {
                    //leitura da caixa de texto se texto for int
                    int cod = Integer.parseInt(codTxt.getText());

                    //efetua-se a busca com o código informado
                    produtoSelecionado = FakeBancoDados.consultaProdutoCod(cod);

                    //avaliamos a existência de um produto de mesmo código
                    if (produtoSelecionado != null) {
                        //atualiza os campos do produto
                        //informaçÕes exibidas a caixa de txt = String
                        nomeTxt.setText(produtoSelecionado.getNome());
                        precoUnitTxt.setText(produtoSelecionado.getPreco() + "");
                        quantidadeTxt.setEnabled(true);

                    } else {
                        //não cadastrado
                        JOptionPane.showMessageDialog(null, "Produto não cadastrado", "código", JOptionPane.INFORMATION_MESSAGE);

                    }

                    //caso texto informado não seja inteiro    
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "O código deve ser um valor numérico", "erro no código", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_codTxtKeyTyped

    private void tabelaCarrinhoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaCarrinhoKeyPressed
//
    }//GEN-LAST:event_tabelaCarrinhoKeyPressed

    private void quantidadeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeTxtKeyReleased
        //irformação de nova quantidade e calculo sobre ela

        //diferente de vazio ocorrerá alteração
        if (!quantidadeTxt.getText().isEmpty()) {
            try{
            
            //captura de texto quantidade e conversão para inteiro
            int quantidade = Integer.parseInt(quantidadeTxt.getText());

            //cálculo do montante
            double parc = produtoSelecionado.getPreco() * quantidade;
            //representação em duas casas decimais - "2f"
            precoUnitTxt.setText(String.format("%.2f", parc));
            }catch(NumberFormatException ex){
                precoUnitTxt.setText("N/A");
            }
        } else {
            precoUnitTxt.setText("N/A");
        }
    }//GEN-LAST:event_quantidadeTxtKeyReleased

    private void addProdutoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdutoBtnActionPerformed
        if(produtoSelecionado != null && !precoUnitTxt.getText().equals("N/A")){
            
            //produto apto a adição
            int quantidade = Integer.parseInt(quantidadeTxt.getText());
                    if(quantidade <= produtoSelecionado.getQuantidade()){
                        //quantidade do produto é suficiente
                        
                        Produto vendido = new Produto(produtoSelecionado.getCodigo(), produtoSelecionado.getNome(), produtoSelecionado.getPreco(), quantidade);
                        
                        //produtoSelecionado.setQuantidade(produtoSelecionado.getQuantidade() - quantidade);
                        
                        //calculo de total
                        precoCompra += produtoSelecionado.getPreco() * quantidade;
                        totalTxt.setText(String.format("%.2f", precoCompra));
                        
                        
                        //limpando informações para formação de novo produto
                        codTxt.setText("");
                        quantidadeTxt.setText("1");
                        precoUnitTxt.setText("");
                        produtoSelecionado = null;
                        quantidadeTxt.setEnabled(false);
                        nomeTxt.setText("");
                        
                        //add produto vendido a tabela
                        this.carrinhoComprasTab.addNovoProduto(vendido);
                        tabelaCarrinho.updateUI();
                    
                    
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Não há quantidade suficiente do produto", "quantidade insuf.", JOptionPane.INFORMATION_MESSAGE);
                        
                    }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Letra informada, favor corrija", "entrada inválida", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_addProdutoBtnActionPerformed

    private void removerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBtnActionPerformed
        int linha = tabelaCarrinho.getSelectedRow();
        
        if(linha > -1){
            
            //a linha existe e pode remover produto
            int op = JOptionPane.showConfirmDialog(null, "Deseja remover o produto selecionado", "confirmação de exclusão", JOptionPane.YES_NO_OPTION);
        
        if(op == JOptionPane.YES_OPTION){
            //com a opção sim selecionada se remove o produto
            
            String senha = JOptionPane.showInputDialog(null, "informe a senha do gerente", "operação restrita", JOptionPane.INFORMATION_MESSAGE);
            
            if(senha != null && senha.equals("ifmg")){
            carrinhoComprasTab.removeProdutoCarrinho(linha);
            atualizaQuantidades();
            }
        }
        
        }else{
            //produto não foi selecionado para remoção
            JOptionPane.showMessageDialog(null, "É preciso selecionar um produto", "Selecionar!!!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }//GEN-LAST:event_removerBtnActionPerformed
    
    private boolean verificaQuantidades(){
        Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();
        
        for(int i = 0; i < produtos.size(); i++){
            Produto estoque = FakeBancoDados.consultaProdutoCod(produtos.get(i).getCodigo());
            if(produtos.get(i).getQuantidade() > estoque.getQuantidade()){
                JOptionPane.showMessageDialog(null, "A quantidade do produto: " + estoque.getNome() + " é insuficiente", "quantidade insuficiente", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }
        return true;
    }
    
    private void finalizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarBtnActionPerformed
        //verificar a existência da quantidade dos produtos vendidos
        if(verificaQuantidades()){
            //atualizar banco de dados fake
        Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();

            for(int i = 0; i < produtos.size(); i++){
                
                Produto estoque = FakeBancoDados.consultaProdutoCod(produtos.get(i).getCodigo());
                estoque.setQuantidade(estoque.getQuantidade() - produtos.get(i).getQuantidade());
            }
            
        //zerando valor total para prox compra
        precoCompra = 0.0;
        totalTxt.setText("0.0");
        
        //remover produtos do carrinho pós compra
        carrinhoComprasTab.limpaCarrinho();
        tabelaCarrinho.updateUI();
        } 
        
    }//GEN-LAST:event_finalizarBtnActionPerformed

    public void atualizaQuantidades(){
        tabelaCarrinho.updateUI();
        
        double preco = carrinhoComprasTab.calculaPrecoParcialCompra();
    
        totalTxt.setText(String.format("%.2f", preco));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProdutoBtn;
    private javax.swing.JTextField codTxt;
    private javax.swing.JButton finalizarBtn;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomeTxt;
    private javax.swing.JTextField precoUnitTxt;
    private javax.swing.JTextField quantidadeTxt;
    private javax.swing.JButton removerBtn;
    private javax.swing.JTable tabelaCarrinho;
    private javax.swing.JLabel totalTxt;
    // End of variables declaration//GEN-END:variables
}
